<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>JavaScript Syntax: version 0.1</string>
	<key>fileTypes</key>
	<array>
		<string>js</string>
		<string>htc</string>
		<string>jsx</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/usr/bin/env node</string>
	<key>foldingStartMarker</key>
	<string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>JavaScript1</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#statements</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>class-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?x)
\b(class)\b\s*
([a-zA-Z_$][a-zA-Z0-9_$]*)?\s*
(?:(extends)\s*([a-zA-Z_$][a-zA-Z0-9_$]*)?\s*)?
(?={)
</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>name</key>
			<string>meta.class.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>meta.class.block.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?x)
\b(?:(constructor)|([a-zA-Z_$][a-zA-Z0-9_$]*))\s*(?=\([^\)]*\)\s*{)
</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.constructor.js</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=})</string>
							<key>name</key>
							<string>meta.class.methods.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#parameter-declaration</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-group</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>node.js shebang</string>
					<key>match</key>
					<string>^#!/usr/bin/env node</string>
					<key>name</key>
					<string>comment.line.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(#!\/).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;!--|--&gt;)</string>
					<key>name</key>
					<string>comment.block.html.js</string>
				</dict>
			</array>
		</dict>
		<key>expression-parentheses</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parentheses.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parentheses.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameter.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\,[ |\t]*</string>
					<key>name</key>
					<string>meta.delimiter.object.comma.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primary-expressions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier-expressions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parentheses-expression</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(?![0-9])</string>
					<key>name</key>
					<string>meta.delimiter.method.period.js</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?x)
\b(function\b(\*)?)\s*
(\b[a-zA-Z_$][a-zA-Z0-9_$]*\s*)?
(?=\([^\)]*\)\s*{)
</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>name</key>
			<string>meta.function.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameter-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-group</string>
				</dict>
			</array>
		</dict>
		<key>identifier-expressions</key>
		<dict>
			<key>begin</key>
			<string>(?=(\.)?\b[a-zA-Z_$][a-zA-Z0-9_$]*\b)</string>
			<key>end</key>
			<string>(?!\s*(\.\s*)?[a-zA-Z_$])\b</string>
			<key>name</key>
			<string>meta.expression.identifier.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.(?![0-9])</string>
					<key>name</key>
					<string>meta.delimiter.method.period.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.|)\s*\b[a-zA-Z_$][a-zA-Z0-9_$]*\b(?=\s*\()</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.|)\s*\b[a-zA-Z_$][a-zA-Z0-9_$]*\b(?=\s*\=\s*\bfunction\b)</string>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.|)\s*\b[a-zA-Z_$][a-zA-Z0-9_$]*\b(?=\s*\=\s*\bclass\b)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)\s*[a-zA-Z_$][a-zA-Z0-9_$]*\b</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z_$][a-zA-Z0-9_$]*\b(?=\s*\.)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_$][a-zA-Z0-9_$]*\b(?=\s*\.)</string>
					<key>name</key>
					<string>meta.identifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_$][a-zA-Z0-9_$]*\b</string>
					<key>name</key>
					<string>meta.identifier.js</string>
				</dict>
			</array>
		</dict>
		<key>if-statement</key>
		<dict>
			<key>begin</key>
			<string>(?x)
\b(if)\b\s*
(?=\(.*?\)\s*{)
</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>name</key>
			<string>meta.statement.if.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-parentheses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-group</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(delete|in|instanceof|new|typeof|void|with)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!|%|&amp;|\*|(?&lt;![=(:\[,]|^|return|yield|yield\*|&amp;&amp;|\|\||!)\/|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?|\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while|yield|yield\*)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(super|this|arguments|self)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>
			</array>
		</dict>
		<key>numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![a-zA-Z0-9_$])\.[0-9]+\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?&lt;!\.)[0-9]+\.(?:[0-9]|([a-zA-Z_$][a-zA-Z0-9_$]*)?)</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
			</array>
		</dict>
		<key>parameter-declaration</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameter.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:super|this|arguments)\b</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_$][a-zA-Z0-9_$]*</string>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,[ |\t]*</string>
					<key>name</key>
					<string>meta.delimiter.object.comma.js</string>
				</dict>
			</array>
		</dict>
		<key>parentheses-expression</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![\}\]\)]|["'])\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parentheses.begin.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Primary Expressions of Expressions</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parentheses.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.brace.round.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>primary-expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#numeric</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:\[,]|^|return|yield|yield\*|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)[igm]*</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-declaration</string>
				</dict>
			</array>
		</dict>
		<key>statement-group</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.statementgroup.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.statementgroup.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.statement-group</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statements</string>
				</dict>
			</array>
		</dict>
		<key>statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-group</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF7</string>
</dict>
</plist>
