<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>JavaScript Syntax: version 2.0</string>
	<key>fileTypes</key>
	<array>
<!-- 		<string>js</string>
		<string>htc</string>
		<string>jsx</string> -->
	</array>
	<key>firstLineMatch</key>
	<string>^#!/usr/bin/env node</string>
	<key>foldingStartMarker</key>
	<string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>JavaScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#statements</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>node.js shebang</string>
					<key>match</key>
					<string>^#!/usr/bin/env node</string>
					<key>name</key>
					<string>comment.line.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
		 			<key>captures</key>
		 			<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(#!\/).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;!--|--&gt;)</string>
					<key>name</key>
					<string>comment.block.html.js</string>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>

				<dict>
					<key>begin</key>
					<string>(?&lt;!=)((?:\+\+|--|\+|-|~|!)|(?:delete|void|typeof)(?=\b))(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.unary.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[=\)\]},;]|$)</string>
					<!-- <string>(?=[+\-*/=|&amp;\)\]},;])|(?&lt;!delete|void|typeof)(?&lt;=[\)\]\}]|[a-zA-Z0-9_$])(?!\s*[\[\(])</string> -->
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
					<!--<key>name</key>
					<string>invalid.illegal</string> -->
				</dict>

				<dict>
					<key>begin</key>
					<string>(?&lt;!=)(==|===|!=|!==)(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.equality.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[=\)\]},;]|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>

				<dict>
					<key>begin</key>
					<string>(?&lt;!=)(=|\*=|/=|%=|\+=|-=|&lt;&lt;=|>>=|>>>=|&amp;=|^=|\|=)(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[=\)\]},;]|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>

				<dict>
					<key>begin</key>
					<string>(&amp;&amp;|\|\|)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logical.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[=\)\]},;])|(?&lt;!,|\*/|^)\n</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=,|\*/|^)\s+</string>
							<key>name</key>
							<string>meta.whitespace.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
					<key>name</key>
					<string>meta.other.logical</string>
				</dict>
				
				<!-- <dict>
					<key>match</key>
					<string>\b(delete|in|instanceof|new|typeof|with)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict> -->

				<!-- <dict>
					<key>match</key>
					<string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?|\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict> -->

				<dict>
					<key>match</key>
					<string>!|%|&amp;|\*|(?&lt;![=(:\[,]|^|return|&amp;&amp;|\|\||!)\/|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?|\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>

				<dict>
					<key>include</key>
					<string>#lefthandside-expressions</string>
				</dict>

				<dict>
					<key>begin</key>
					<string>(,)\s*</string>
					<!-- <string>,[ |\t]*</string> -->
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comma.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[=\)\]},;])|(?&lt;!,|\*/|^)\n</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=,|\*/|^)\s+</string>
							<key>name</key>
							<string>meta.whitespace.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
					<key>name</key>
					<string>meta.other.comma.js</string>
				</dict>

				<!-- <dict>
					<key>match</key>
					<string>,[ |\t]*</string>
					<key>name</key>
					<string>keyword.operator.comma.js</string>
				</dict> -->
			</array>
		</dict>

		<key>lefthandside-expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(new)\s+((?!(?:function|new)\b)\w+(?:\.\w*)?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[a-zA-Z0-9_$])(?!\()|(?&lt;=[\)])|$</string>
					<!--<key>name</key>
					<string>meta.class.instance.constructor</string> -->
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(new)\b</string>
					<key>name</key>
					<string>keyword.operator.new.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#call-expression</string>
				</dict>
			</array>
		</dict>

		<key>call-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-expressions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primary-expressions</string>
				</dict>

				<dict>
					<key>include</key>
					<string>#identifier-accessor</string>
				</dict>

				<dict>
					<key>begin</key>
					<string>(?=[\[\(\{])</string>
					<key>end</key>
					<string>(?![\[\(.])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;![\}\]\)]|["'])\[</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.array.begin.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\]</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.array.end.js</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.brace.square.js</string>
							<key>comment</key>
							<string>Array Literals</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comma-delimiter</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;![\}\]\)]|["'])\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parentheses.begin.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parentheses.end.js</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.brace.round.js</string>
							<key>comment</key>
							<string>Primary Expressions of Expressions</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#object-literal-expression</string>
						</dict>

						<dict>
							<key>include</key>
							<string>#identifier-accessor</string>
						</dict>

						<dict>
							<key>include</key>
							<string>#member-accessor</string>
						</dict>
					</array>
					<key>name</key>
					<string>meta.expression.member</string>
				</dict> 
			</array>
		</dict>

		<key>function-expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[()a-zA-Z0-9_$\s,]+=>)(?:([a-zA-Z_$][a-zA-Z0-9_$]*)|(\()([a-zA-Z0-9_$\s,]*)(\)))(\s*=>)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.arrow.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.arrow.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.js</string>
							<!-- <string>keyword.other.js</string> -->
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=})|(?=[\)\]},;]|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-group</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
					<key>name</key>
					<string>meta.function.arrow.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(function\b)\s*([a-zA-Z_$][a-zA-Z0-9_$]*)?\s*(\()(.*?)(\))\s*(?={)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=})</string>
					<key>comment</key>
					<string>match regular function like: function myFunc(arg) { … }</string>
					<key>name</key>
					<string>meta.function.expression.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-group</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<key>primary-expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:\[,]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)[igm]*</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>

				<!-- <dict>
					<key>begin</key>
					<string>[a-zA-Z_$][a-zA-Z0-9_$]*</string>
					<key>end</key>
					<string></string>
					<key>name</key>
					<string>meta.identifier</string>
				</dict> -->
                <!-- <dict>
					<key>include</key>
					<string>#call-expression</string>
				</dict>
				 -->

			</array>
		</dict>

		<key>identifier-accessor</key>
		<dict>
			<key>begin</key>
			<string>(?=[a-zA-Z_$]|\.[a-zA-Z_$])</string><!-- |[\[\(\{]) -->
			<key>end</key>
			<string>(?![\[\(.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(super|this|arguments|self)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>

				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>

				<dict>
					<key>begin</key>
					<string>(?x)
						(?=
							[a-zA-Z_$][a-zA-Z0-9_$]*
							(\.[a-zA-Z_$][a-zA-Z0-9_$]*)*?
							(?:\.prototype\b
								(?!\s*=\s*function\b)
							)
						)|
						(?&lt;![\.a-zA-Z0-9_$])(?=
							[a-zA-Z_$][a-zA-Z0-9_$]*
							(\.[a-zA-Z_$][a-zA-Z0-9_$]*)+?
							(?=\s*=\s*function\b)
						)
					</string>
					<!-- <string>(?=\.?[\.a-zA-Z0-9_$]+?(?:\.prototype\b(?!\s*=\s*function\b)|\s*=\s*function\b))</string> -->
					<key>end</key>
					<string>(\.)(?=prototype\b)|$|(?=(\.[a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*function\b)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.delimiter.method.period.js</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\.)?([a-zA-Z_$][a-zA-Z0-9_$]*)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>meta.delimiter.method.period.js</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.class.js</string>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>

				<dict>
					<key>match</key>
					<string>(\.)?([a-zA-Z_$][a-zA-Z0-9_$]*)\s*(?==\s*function\b)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.delimiter.method.period.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
				</dict>


				<!-- <dict>
					<key>match</key>
					<string>(?:(\.)?((?!prototype[^a-zA-Z0-9_$])[a-zA-Z_$][a-zA-Z0-9_$]*))\s*(?=\.\s*prototype)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.delimiter.method.period.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
					</dict>
				</dict> -->

				<dict>
					<key>begin</key>
					<string>(Obj)(\.)(of)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.support.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.delimiter.method.period.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.function.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parameters.begin.js</string><!--parentheses-->
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parameters.end.js</string><!--parameters-->
								</dict>
							</dict>
							<key>name</key>
							<string>meta.arguments</string>
							<key>comment</key>
							<string>Arguments</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=Obj\.of\()([a-zA-Z_$][a-zA-Z0-9_$]*)</string>
									<key>name</key>
									<string>entity.name.type.instance.js</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#comma-delimiter</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				
				<dict>
					<key>include</key>
					<string>#highlight-identifiers</string>
				</dict>

				<dict>
					<key>match</key>
					<string>[a-zA-Z_$][a-zA-Z0-9_$]*</string>
					<key>name</key>
					<string>meta.identifier</string>
				</dict>

				<dict>
					<key>include</key>
					<string>#member-accessor</string>
				</dict>


				
				
			</array>
			<key>name</key>
			<string>meta.expression.member</string>
		</dict>

		<key>member-accessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\.[a-zA-Z_$])</string>
					<key>end</key>
					<string>(?&lt;!\.)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\.)?([a-zA-Z_$][a-zA-Z0-9_$]*)\s*(?==\s*function\b)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>meta.delimiter.method.period.js</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.js</string>
								</dict>
							</dict>
						</dict>

						<dict>
							<key>include</key>
							<string>#highlight-identifiers</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\.</string>
							<key>name</key>
							<string>meta.delimiter.method.period.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=\.)[a-zA-Z_$][a-zA-Z0-9_$]*</string>
							<!-- <key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>meta.delimiter.method.period.js</string>
								</dict>
							</dict> -->
							<key>name</key>
							<string>meta.identifier</string>
						</dict>
					</array>
					<key>name</key>
					<string>meta.accessor.member</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(?![0-9])</string>
					<key>name</key>
					<string>meta.delimiter.method.period.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.array.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.array.begin.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.accessor.member</string>
					<key>comment</key>
					<string>Member Expressions</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#arguments</string>
				</dict>
			</array>
		</dict>
		<key>arguments</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parameters.begin.js</string><!--parentheses-->
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parameters.end.js</string><!--parameters-->
				</dict>
			</dict>
			<key>name</key>
			<string>meta.arguments</string>
			<key>comment</key>
			<string>Arguments</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comma-delimiter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>highlight-identifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(Infinity|NaN|undefined)\b</string>
					<key>name</key>
					<string>constant.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(console)\b</string>
					<key>name</key>
					<string>entity.name.type.object.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)(warn|info|log|error|time|timeEnd|assert)\b</string>
					<key>name</key>
					<string>support.function.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(debugger)\b</string>
					<key>name</key>
					<string>keyword.other.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Promise|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest|Vector|Initiable|Body|Mortal|Gun|Projectile|Vehicle|Missile)\b</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b(
						s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|o(me|rt)|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|
						h(ome|andleEvent)|
						navigate|
						c(har(CodeAt|At)|o(s|n(cat|t(ains|extual)|firm)|mpile)|eil|l(one|ear(Timeout|Interval)?)|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|
						t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|
						i(s(NaN|Finite|Array)|n(herit(s)?|dexOf)|talics)|
						d(i(r|sableExternalCapture)|ump|etachEvent)|
						u(n(shift|taint|escape|watch)|pdateCommands)|
						j(oin|avaEnabled)|
						p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|
						e(scape|nableExternalCapture|v(al|ery)|lementFromPoint|x(p|ec(Script|Command)?|tend))|
						valueOf|
						UTC|
						queryCommand(State|Indeterm|Enabled|Value)|
						f(i(nd(Index)?|l(ter|e(ModifiedDate|Size|CreatedDate|UpdatedDate))|xed)|o(nt(size|color)|r(ward|Each))|loor|rom(CharCode)?)|
						watch|
						l(ink|o(ad|g)|astIndexOf)|
						a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|
						r(ou(nd|teEvents)|e(duce(Right)?|size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|
						g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|
						m(ap|in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|
						b(toa|ig|o(ld|rderWidths)|link|ack|ind)|
						of
					)\b(?=\()</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b(
						create|
						clone(Extend)?|
						keys|
						get(
							PrototypeOf|
							Own(
								PropertyNames|
								PropertyDescriptor
							)
						)|
						set(
							PrototypeOf
						)|
						define(
							Property|
							Properties
						)|
						is(
							Extensible|
							Frozen|
							Sealed|
							PrototypeOf
						)?|
						freeze|
						preventExtensions|
						seal|
						has(
							OwnProperty
						)|
						propertyIsEnumerable|
						on|emit|
						direct(s)?|
						delete|
						entries|
						values|
						has|
						next|
						require|
						negative|add|subtract|multiply|divide|dot|cross|equals|square|normalize|
						angleTo|angleBy|angleBetween|distance|distanceSq|distanceTo|axisX|unit|mix|
						explode|update|draw
					)\b(?=\()</string>
					<key>name</key>
					<string>support.function.object.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)(?&lt;=\.)(
						super|square|angle|min|max|verticalAngle|horizontalAngle|
						speed|velocity|pos|acceleration|heading|fraction|friction|mass
					)\b</string>
					<key>name</key>
					<string>support.constant.object.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b(
						beginPath|endPath|arc|fillText|stroke|fill|scale
					)\b(?=\()</string>
					<key>name</key>
					<string>support.function.canvas.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)(?&lt;=\.)(
						lineWidth|strokeStyle|fillStyle|font|globalAlpha
					)\b</string>
					<key>name</key>
					<string>support.constant.canvas.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b(
						s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect)|top(Propagation|ImmediatePropagation))|
						has(ChildNodes|Feature)|
						namedItem|
						c(l(earRect|ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|
						tabIndex|
						i(nsert(Row|Before|Cell|Data)|tem)|
						open|
						delete(Row|C(ell|aption)|T(Head|Foot)|Data)|
						f(illRect|ocus)|
						write(ln)?|
						a(dd(EventListener)?|ppend(Child|Data))|
						re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?|EventListener)?|questAnimationFrame)|
						get(Context|NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|
						blur|
						querySelector|
						preventDefault
					)\b(?=\()</string>
					<key>name</key>
					<string>support.function.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)(?&lt;=\.)(
						s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|
						h(istory|ost(name)?|as(h|Focus))|
						y|
						X(MLDocument|SLDocument)|
						n(ext|ame(space(s|URI)|Prop))|
						M(IN_VALUE|AX_VALUE)|
						c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|
						t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|
						SQRT(1_2|2)|
						i(n(ner(Height|Width)|put)|ds|gnoreCase)|
						zIndex|
						o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|
						NEGATIVE_INFINITY|
						d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|
						u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|
						_content|
						p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|
						e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|
						v(isibility|endor(Sub)?|Linkcolor)|
						URLUnencoded|
						P(I|OSITIVE_INFINITY)|
						f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|
						E|
						whiteSpace|
						l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|
						a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|
						r(ight(Context)?|e(sponse(XML|Text)|adyState))|
						global|
						x|
						m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|
						L(N(10|2)|OG(10E|2E))|
						b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image))
					)\b</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)(?&lt;=\.)(
						s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lect(ion(Start|End)|ed(Index)?))|rc)|
						h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|
						n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|
						c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|
						t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|
						i(sMap|ndex|d|m(plementation|ages))|
						o(ptions|wnerDocument|bject)|
						d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|
						useMap|
						p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|
						e(n(ctype|tities)|vent|lements)|
						v(space|ersion|alue(Type)?|Link|Align)|
						URL|
						f(irstChild|orm(s)?|ace|rame(Border)?)|
						width|
						l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|
						a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|
						r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|
						m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|
						b(o(dy|rder)|ackground|gColor)
					)\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)(?&lt;=\.)(
						key|
						view|
						get|set
					)\b</string>
					<key>name</key>
					<string>support.constant.other.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b
						on(
							R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|
							Mouse(o(ut|ver)|down|up|move)|
							B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|
							S(croll|top|ubmit|elect(start|ionchange)?)|
							H(over|elp)|
							C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|
							D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|
							Unload|
							P(aste|ropertychange)|
							Error(update)?|
							Key(down|up|press)|
							Focus|
							Load|
							A(ctivate|fter(update|print)|bort)
						)
					\b</string>
					<key>name</key>
					<string>support.function.event-handler.js</string>
				</dict>
			</array>
		</dict>

		

		<key>object-literal-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.object.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.object.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.object.js</string>
					<key>comment</key>
					<string>Object Literal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(get|set)\s+([a-zA-Z_?$][\w?.$]*)\s*(\()(.*?)(\))\s*({)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.js</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.property.js</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.js</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.js</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.js</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.statementgroup.begin.js</string>
								</dict>
								
							</dict>
							<key>end</key>
							<string>}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.statementgroup.end.js</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.object.property.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?:([0-9]+)|(?:([a-zA-Z_?$][\w?.$]*)|(("|')((?:(?!\4).|\\\4)*)(\4)))(?=\s*:\s*function\b)|(?:([a-zA-Z_?$][\w?.$]*)|(("|')(?:(?!\9).|\\\4)*(\9))))\s*(:)</string>
							<key>beginCaptures</key>
							<dict>

								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.js</string>
								</dict>

								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.js</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.single.js</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.js</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.js</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.js</string>
								</dict>

								<key>7</key>
								<dict>
									<key>name</key>
									<string>entity.name.property.js</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>string.quoted.single.js</string>
								</dict>
								<key>9</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.js</string>
								</dict>
								<key>10</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.js</string>
								</dict>
								<key>11</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.property.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(,)\s*|(?=})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>meta.delimiter.object.comma.js</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.object.property.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>


		<key>comma-delimiter</key>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.js</string>
		</dict>
		<key>statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statement-group</string>
				</dict>

				<dict>
					<key>include</key>
					<string>#var-statement</string>
				</dict>

				<dict>
					<key>begin</key>
					<string>for\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parentheses.begin.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.parentheses.end.js</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\;</string>
									<key>name</key>
									<string>punctuation.terminator.statement.js</string>
								</dict>
								
								<dict>
									<key>include</key>
									<string>#var-statement</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>

				<dict>
					<key>begin</key>
					<string>return</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)|$|\s*(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>

				<dict>
					<key>begin</key>
					<string>\b(function\b)\s*([a-zA-Z_$][a-zA-Z0-9_$]*)?\s*(\()(.*?)(\))\s*(?={)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=})</string>
					<key>comment</key>
					<string>match regular function declaration like: function myFunc(arg) { … }</string>
					<key>name</key>
					<string>meta.function.declaration.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-group</string>
						</dict>
					</array>
				</dict>

				
				<dict>
					<key>match</key>
					<string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>

				<!-- <dict>
					<key>match</key>
					<string>\{|\}</string>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict> -->

				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>


				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype = { … } when extending an object</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.class.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.prototype.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = myfunc</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: foobar: function() { … }</string>
					<key>match</key>
					<string>\b([a-zA-Z_?.$][\w?.$]*)\s*:\s*\b(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Attempt to match "foo": function</string>
					<key>match</key>
					<string>(?:((')([^']*)('))|((")([^"]*)(")))\s*:\s*\b(function)?\s*(\()([^)]*)(\))</string>
					<!-- <string>(?:((')(.*?)('))|((")(.*?)(")))\s*:\s*\b(function)?\s*(\()(.*?)(\))</string> -->
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
			</array>
		</dict>
		<key>var-statement</key>
		<dict>
			<key>begin</key>
			<string>var\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)|(?&lt;!,|\*/|^)\n|(?=[\}\]\)])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\s+</string>
					<key>name</key>
					<string>meta.whitespace.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([a-zA-Z_$][a-zA-Z0-9_$]*)(?!\s*=)\s*(?:,|(?=[;\}\]\)])|(?&lt;!,|\*/)(?=\n))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.declaration.js</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>([a-zA-Z_$][a-zA-Z0-9_$]*)\s*(=\s*(?=function\b))|([a-zA-Z_$][a-zA-Z0-9_$]*)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.declaration.variable.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.declaration.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.declaration.variable.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(,)|(?=[;\}\]\)])|(?&lt;!,|\*/)(?=\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.delimiter.comma.js</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-group</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.statementgroup.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.statementgroup.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.statements</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statements</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
